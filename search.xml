<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo--next主题下数学公式渲染不出问题]]></title>
    <url>%2F2019%2F08%2F30%2Fhexo-next%E4%B8%BB%E9%A2%98%E4%B8%8B%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%B8%B2%E6%9F%93%E4%B8%8D%E5%87%BA%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[在hexo搭建的博客上用markdown写文章时，一般会碰到数学公式，但是hexo默认情况下渲染数学公式会出现各种各样的问题出现问题的原因hexo默认使用的是hexo-renderer-marked引擎来渲染网页，这个引擎会将markdown符号转化为相应的html标签。比如下划线_转化为标签，所以mathjax引擎渲染数学公式的时候会出错 解决的方法一、更换hexo的markdown引擎将hexo-renderer-marked换成hexo-renderer-kramed引擎，命令：12npm uninstall hexo-renderer-marked --save #卸载之前的引擎npm install hexo-renderer-kramed --save #安装新引擎 完成这一步之后行间公式可以正常的渲染了，但是行内公式还是有问题，原因是因为 hexo-renderer-kramed 引擎也有语义冲突的问题，所以要执行下一步 二、解决hexo-renderer-kramed语意冲突问题找到node_modules\kramed\lib\rules\inline.js，把第11行的 escape 变量的值做相应的修改：12\\escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,escape: /^\\([`*\[\]()#$+\-.!_&gt;])/, 第20行的em变量也要做相应的修改。12//em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/, 三、在 Next 主题中开启 MathJax 开关进入到主题目录，即是安装hexo目录下themes/next下找到 _config.yml，把 math 默认的 false 修改为true，具体如下：1234567891011121314# Math Formulas Render Supportmath: enable: true # Default (true) will load mathjax / katex script on demand. # That is it only render those page which has `mathjax: true` in Front-matter. # If you set it to false, it will load mathjax / katex srcipt EVERY PAGE. per_page: true # hexo-renderer-pandoc (or hexo-renderer-kramed) required for full MathJax support. mathjax: enable: true # See: https://mhchem.github.io/MathJax-mhchem/ mhchem: false 四、在文章的里打开mathjax开关，如下：123456---title: 动态规划date: 2019-08-10 23:18:02tags:mathjax: true--- 最后是我在解决这个问题的过程中，查了比较多的资料才解决，一直碰壁。最后发现原因是：我在第一次动手解决这个问题的时候，装了hexo-math这个插件，后来发现这个插件好像用不了，我也不知道为什么。用以上的方法解决一定好先卸载hexo-math这个插件1npm uninstall hexo-math --save]]></content>
  </entry>
  <entry>
    <title><![CDATA[ubuntu中latex解决font-not-found问题]]></title>
    <url>%2F2019%2F08%2F23%2Ffont-not-found%E2%80%9D%2F</url>
    <content type="text"><![CDATA[在ubuntu下利用命令行”latexmk -xelatex+文件名”latex源文件的时候有时候会出现错误1fontspec error :&quot;font-not-found&quot;这是因为系统中没有安装楷体解决的方法是： 准备字体从windows系统中拷贝出字体，一般字体的目录是c:\windows\fonts 将拷贝出来的字体放在ubuntu的目录\usr\share\fonts中 导出字体在终端中数学以下命令123sudo mkfontscalesudo mkfontdirsudo fc-cache -fv 命令执行成功后终端会显示fc-cache:succeeded 当然这里也可以在网上下载楷体然后安装。]]></content>
  </entry>
  <entry>
    <title><![CDATA[多元分析]]></title>
    <url>%2F2019%2F08%2F21%2F%E5%A4%9A%E5%85%83%E5%88%86%E6%9E%90%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[神经网络（浅总结）]]></title>
    <url>%2F2019%2F08%2F20%2F%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%EF%BC%88%E6%B5%85%E6%80%BB%E7%BB%93%EF%BC%89%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[ubuntu下设置显示屏分辨率]]></title>
    <url>%2F2019%2F08%2F19%2F%E8%AE%BE%E7%BD%AE%E6%98%BE%E7%A4%BA%E5%B1%8F%E5%88%86%E8%BE%A8%E7%8E%87%2F</url>
    <content type="text"><![CDATA[首先利用xrandr命令列出当前所能检测到的所有的分辨率。在运行xrandr命令后可以看到connected前面表示的是当前得到显卡。 再利用cvt命令来获得配置显示模式的格式，具体的用法是：cvt X Y,其中X表示的是分辨率的宽度，Y表示的是分辨率的高度。例如配置1920*1080的分辨率，可以使用命令： 1cvt 1920 1080 将cvt命令得到的格式用xrandr命令添加 123sudo xrandr --newmode #后面跟着的是执行第2步中显示的Modeline后面的一串英文，其中引号中的内容可以任意修改。sudo xrandr --addmode 显卡名称 引号的内容sudo xrandr --output 显卡名称 引号的内容 为了在每次开机的时候设定好分辨率，将上面2，3步的命令添加到/.profile中]]></content>
  </entry>
  <entry>
    <title><![CDATA[模糊聚类分析（浅总结）]]></title>
    <url>%2F2019%2F08%2F17%2F%E6%A8%A1%E7%B3%8A%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90%2F</url>
    <content type="text"><![CDATA[模糊指的是客观事物差异的中间过渡中的“不分明性”或“亦此亦彼性”。模糊数学就是用数学方法研究与处理模糊现象的数学，它把数学的应用范围从确定领域扩大到了模糊领域,即从精确现象到模糊现象。 基本概念]]></content>
  </entry>
  <entry>
    <title><![CDATA[马氏链模型]]></title>
    <url>%2F2019%2F08%2F17%2F%E9%A9%AC%E6%B0%8F%E9%93%BE%E6%A8%A1%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[描述一类重要的随机动态过程的模型，时间和状态都是离散的随机转移过程。 系统在每个时期所处的状态是随机的 下时期状态只确定于本时期的状态和转移概率基本概念状态概率&ensp;a_i(n) = P(X_n = i),i = 1,2,3..k, n = 0,1...转移概率&ensp;P_{ij} = P(X_{n+1} = j|X_n = i), p_{ij}>=0,i = 1,2,3...k,n状态转移基本方程&ensp;a_i(n+1) = \sum_{j = 1}^{k}a_j(n)p_{ji},i = 1,2...,k,n状态概率向量&ensp; a(n) = (a_1(n),a_1(n),...a_k(n))转移概率矩阵&ensp; P= {p_{ij}}_{k*k}]]></content>
  </entry>
  <entry>
    <title><![CDATA[logistic回归]]></title>
    <url>%2F2019%2F08%2F13%2Flogistic%E6%A8%A1%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[logistic回归模型是一种概率模型，结果发生的变量取值必须是二分类或者多项分类。logistic研究的是观察结果为分类变量与多个影响因素之间的回归关系的多变量回归方法。]]></content>
  </entry>
  <entry>
    <title><![CDATA[目标规划]]></title>
    <url>%2F2019%2F08%2F12%2F%E7%9B%AE%E6%A0%87%E8%A7%84%E5%88%92%2F</url>
    <content type="text"><![CDATA[线性规划只能解决一组线性约束条件下,某一目标只能是一个目标的最大或最小值的问题。但是实际决策中,衡量方案优劣要考虑多个目标。所以需要目标规划模型，模型中的这些目标中,有主要的,也有次要的;有最大值的,也有最小值的;有定量的,也有定性的;有相互补充的。1. 目标函数的求解思路 加权系数法为每一目标赋一个权系数,把多目标模型转化成单一目标的模型。但困难是要确定合理的权系数,以反映不同目标之间的重要程度。 优先等级法将各目标按其重要程度不同的优先等级,转化为单目标模型。 有效解法寻求能够照顾到各个目标,并使决策者感到满意的解。由决策者来确定选取哪一个解,即得到一个满意解。但有效解的数目太多而难以将其一一求出。 2. 目标规划的数学模型为了具体说明目标规划与线性规划在处理问题的方法上的区别,先通过例子来介绍目标规划的有关概念及数学模型。某工厂生产 I,II 两种产品,已知有关数据见下表: I II 拥有量 原料 2 1 11 设备 1 2 10 利润 8 10 是求获利最大的生产方案这道题的数学模型是，设生产 I,II 产品分别为x_1,x_2则： （目标函数）max z = 8x_1 + 10x_2\\ （约束条件）s.t. \begin{cases} 2x_1 + x_2 < 11\\ x_1 + 2x_2 < 10\\ x_1,x_2 > 0 \end{cases}最优决策方案为: x_{1}^*= 4 , x_{2}^* = 3 , z = 62元。但实际上工厂在作决策方案时,要考虑市场等一系列其它条件。如 根据市场信息,产品 I 的销售量有下降的趋势,故考虑产品 I 的产量不大于产品 II。 超过计划供应的原材料,需要高价采购,这就使成本增加。 应尽可能充分利用设备,但不希望加班。 应尽可能达到并超过计划利润指标 56 元。 有了这一系列的条件之后，简单的线性规划不足以解决这样的问题，所以要用目标规划这种数学模型。下面引入与建立目标规划数学模型有关的概念。 正，负偏差变量设 d 为决策变量的函数,正偏差变量d^+ = max{d, d^0, 0}表示决策值超过目标值的部分,负偏差变量d^- =max{d, d^0, 0}表示决策值未达到目标值的部分,这里d^0表示d的目标值。其中d^+,d^-是同类型的数，因决策值不可能既超过目标值同时又未达到目标值,即恒有d^+ * d^- = 0。 绝对(刚性)约束和目标约束绝对约束是指必须严格满足的等式约束和不等式约束;如线性规划问题的所有约束条件,不能满足这些约束条件的解称为非可行解,所以它们是硬约束。目标约束是目标规划特有的,可把约束右端项看作要追求的目标值。在达到此目标值时允许发生正或负偏差,因此在这些约束中加入正、负偏差变量,它们是软约束。 优先因子(优先等级)与权系数一个规划问题常常有若干目标。但决策者在要求达到这些目标时,是有主次或轻重缓急的不同。凡要求第一位达到的目标赋于优先因子P_1，其他的以此类推，例如：P_k比P_{k+1}的优先级高。赋于它们不同的权系数w_j，区别具有相同优先因子的两个目标的区别。 目标规划的目标函数目标规划的目标函数(准则函数)是按各目标约束的正、负偏差变量和赋于相应的优先因子而构造的。主要有三种形式。 要求恰好达到目标值,即正、负偏差变量都要尽可能地小,这时min z = f ( d^+ + d^− ) 要求不超过目标值,即允许达不到目标值,就是正偏差变量要尽可能地小,这时minz = f(d^+) 要求超过目标值,即超过量不限,但必须是负偏差变量要尽可能地小,这时min z = f ( d^− )对每一个具体目标规划问题,可根据决策者的要求和赋于各目标的优先因子来构造目标函数。]]></content>
  </entry>
  <entry>
    <title><![CDATA[动态规划]]></title>
    <url>%2F2019%2F08%2F10%2F%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%2F</url>
    <content type="text"><![CDATA[动态规划是求解某类问题的一种方法,是考察问题的一种途径,而不是一种特殊算法(如线性规划是一种算法)。它不像线性规划那样有一个标准的数学表达式和明确定义的一组规则,而必须对具体问题进行具体分析处理。1. 决策过程的分类根据过程的时间变量是离散的还是连续的,分为离散时间决策过程和连续时间决策过程。根据过程演变是确定的还是随机的,分为确定性决策过程和随机性决策过程。其中应用最广的是确定性多阶段决策过程。 2. 基本概念、基本方程和计算方法一个多阶段决策过程最优化问题的动态规划模型通常包含阶段，状态，决策，策略这几个要素。阶段表示的是对整个过程的自然划分。通常根据时间顺序或空间顺序特征来划分阶段,以便按阶段的次序解优化问题。阶段变量一般用 k = 1 , 2 , L , n 表示。状态表示的是每个阶段开始时过程所处的自然状况。描述状态的变量称状态变量。变量允许取值的范围称允许状态集合。用x_k表示第 k 阶段的状态变量,它可以是一个数或一个向量。用X_k表示第 k 阶段的允许状态集合。决策表示的是当一个阶段的状态确定后,可以作出各种选择从而演变到下一阶段的某个状态。描述决策的变量称决策变量，变量允许取值的范围称允许决策集合。在最优控制问题中也称为控制。用u_k (x_k)表示第 k 阶段处于状态x_k时的决策变量,用U_k(x_k)表示x_k的允许决策集合。策略表示的是决策组成的序列。由初始状态x_1开始的全过程的策略记作p_{1n}(x1)由第 k 阶段的状态x_k开始到终止状态的后部子过程的策略记作p_{kn}(x_k)。状态转移方程表示的是在确定性过程中,一旦某阶段的状态和决策为已知,下阶段的状态便完全确定。写作： X_{k+1} = T_{k}(u_k, x_k) k = 1,2,3,...n指标函数表示的是衡量过程优劣的数量指标,它是定义在全过程和所有后部子过程上的数量函数,用 V_{kn}( x_k , u_k , x_k + 1 , L , x_n + 1 ) 表示,k = 1 , 2 , L , n。]]></content>
  </entry>
  <entry>
    <title><![CDATA[小行星问题的二次曲线理论(椭圆部分)]]></title>
    <url>%2F2019%2F08%2F10%2F%E4%BA%8C%E6%AC%A1%E6%9B%B2%E7%BA%BF%E7%90%86%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[小行星轨道问题中，关于二次曲线理论的公式： 椭圆的一般方程：a_1x^2 + 2a_2xy + a_3y^2 + 2a_4x + 2a_5y + 1 = 0\\ 椭圆的标准方程：\frac{x^2}{a^2} + \frac{y^2}{b^2} = 1椭圆经过旋转和平移变换后的公式是： \lambda_1 X^2 + \lambda_2 Y^2 + |\frac{D}{C}| = 0\\ C = \begin{bmatrix}a_1&a_2\\a_2&a_3\end{bmatrix}\quad D =\begin{bmatrix}a_1&a_2&a_3\\a_2&a_3&a_5\\a_4&a_5&1\end{bmatrix} 其中\lambda_1，\lambda_2是C矩阵的特征值所以椭圆的长半轴的平方为：a^2 = |\frac{|D|}{\lambda_1 |C|}|椭圆的短半轴长的平方为：b^2 = |\frac{|D|}{\lambda_2|C|}|椭圆的半焦距的平方为：c^2 = \sqrt{a^2 + b^2}椭圆的离心率为：e = \frac{c}{a}椭圆的面积为：S = pi ab本文参考]]></content>
  </entry>
  <entry>
    <title><![CDATA[matlab进阶]]></title>
    <url>%2F2019%2F08%2F09%2Fmatlab%E8%BF%9B%E9%98%B6%2F</url>
    <content type="text"><![CDATA[一、matlab绘图强大的绘图功能是matlab的特点之一，matlab提供一系列的绘图函数，用户可以不用过多的考虑绘图的细节，只需要一些简单的绘图参数就能够完成绘图。利用plot函数来绘制图形用plot函数来绘制图形主要有以下三步： 通过指定要绘制函数的变量x的值的范围来定义x 定义函数y = f(x) 调用plot函数命令在图上添加标题，标签，网格线和缩放 命令 描述说明 xlabel,ylabel 沿着x轴和y轴生成标签 title 设置图的总标题 grid on 生成网格线 axis equal 允许生成具有相同比例因子的绘图和两个轴上的空格。 axis square 命令生成一个方形图 在同一个图上绘制多个函数通过在函数plot传入多个函数对应的参数实现，例如plot(x,y,x,g)。在图上设置颜色MATLAB提供了八个基本的颜色选项来绘制图形。 下表显示了颜色及其代码 代码 描述说明 r 红色 y 黄色 g 绿色 b 蓝色 设置刻度轴axis命令用来设置轴刻度。可以通过以下方式使用axis命令为x和y轴提供最小和最大值。绘制条形图bar命令绘制二维条形图，基本的参数和plot函数差不多绘制等高线两个函数的变量的轮廓线是曲线，matlab提供了contour函数来绘制图形。具体的步骤是 通过meshgrid来生成两个独立的变量x,y。例：[x,y] = meshgrid(1:0.1:2,1:0.2:4) 定义函数g = f(x,y) 调用函数contour(x,y,g) 其他的关于标签的内容和plot函数的用法一样，同时为了时代的图上有标识可以调用set函数三维图matlab中绘制三维图也是分为三步，前两步和绘制轮廓图的过程是一样的，第三步则是调用surf函数，这个函数的用法和contour的用法是一样的的。同时也可以调用mesh函数进行绘制三维图 二、matlab代数(方程求解)在MATLAB中求解基本代数方程solve函数用于求解代数方程。在其最简单的形式中，solve函数将引用中的方程式作为参数。例子：solve(‘x - 21 = 0’)该方法适用于方程组，二次方程，高阶方程。若涉及多个变量，则要转入第二个参数。例子:solve(‘u - v + 2 = 0’, ‘v’)。 第二种方法是调用roots函数，该函数传入的参数是方程的系数，该函数也是适用于方程组，二次方程，高阶方程等。例子：要求 2x -3y =0,即是调用root([2, -3]) 三、matlab微积分MATLAB提供了解决微分和积分微积分的各种方法，求解任何程度的微分方程和极限计算。可以轻松绘制复杂功能的图形，并通过求解原始功能以及其衍生来检查图形上的最大值，最小值和其他固定点。计算极限MATLAB提供计算极限的limit函数。最基本的用法是将表达式作为参数，并在独立变量为零时找到表达式的极限。limit函数落在符号计算域; 需要使用syms函数来告诉MATLAB正在使用的符号变量。例子：要计算(x^2+6)/(x^3+4)的极限,要这样输入12sysm xlimit((x^2+6)/(x^3+4)) limit函数还可以计算函数的极限，因为变量趋向于除零之外的某个数字，即是在表达式这个参数后面，输入要变量要趋进的数。例子：12sysm xlimit((x^2+6)/(x^3+9), 3) limit可以通过将字符串“left”和“right”作为最后一个参数传递给limit命令来计算左侧和右侧的极限。 四、matlab微分和导数matlab提供用于计算符号导数的diff命令。 以最简单的形式，将要微分的功能传递给diff命令作为参数。例子：123syms tm = 2t^2+3t+6diff(m) 要计算高阶导数，即是在diff函数后面多加所求导数的结束即可计算曲线的最大值和最小值要计算曲线的最大最小值，就是通过对曲线所对应的函数进行求导，并令其等于零时，得到的解的函数值。对于函数y = f(x)，图形具有零斜率的图上的点称为固定点。 换句话说，固定点是f'(x)= 0要找到微分的函数的固定点，需要将导数设置为零并求解方程。求解微分方程matlab提供dslove函数来求解微分方程，其中slove函数的最基本的用法是dsolve(‘eqn’),eqn指的是文本内容，即是要求微分方程的文本形式，具体来说是eqn就是微分方程加上单引号。对于高阶的微分方程，采用的是D导数的顺序表示。例子：要求y''+ 2y' + y + 2x + 1 = 0,matlab的命令为：1dsolve(&apos;D2y + 2*Dy + y +2*x +1 = 0&apos;) 五、matlab整合集成 不定积分matlab中使用int函数求出函数的不定积分，这个函数的参数直接就是要求不定积分的方程 定积分使用int函数求积分，传入下上限作为int的第二和第三个参数。 六、matlab转换matlab提供了处理转换的命令，如拉普拉斯和傅里叶变换。转换在科学和工程中被用作简化分析和从另一个角度看待数据的工具。MATLAB提供了laplace，fourier和fft命令来处理拉普拉斯，傅立叶和快速傅里叶转换。拉普拉斯变换采用的是laplace函数,其逆变换采用的是ilaplace。傅立叶变换采用的是fourier函数，其逆变换采用的是ifourier。 七、matlab向量 matlab中向量的加减法和标量的乘法都比较简单，不作详细的记录。 MATLAB中转置操作使用一个单引号（’）来表示。 MATLAB 允许在原有的向量中附加向量，共同创造新的向量，若是将两个向量用逗号或者空格隔开，即是增加向量的行数，若是将两个向量用分号隔开，即是增加向量的列数。 八、matlab矩阵创建a矩阵1a = [1 2 3;4 5 6;7 8 9] 要转置矩阵，使用一个单引号(‘)，例子： 1a&apos; 使用*运算执行标准矩阵乘法，这是计算行与列之间的内积。inv函数作用是求矩阵的逆，例子： 1p = a*inv(a) matlab将数字的储存的方式是浮点值，可以使用format命令改变显示内容的格式。例子： 1234format longp = a*inv(a)format shortp = a*a 要执行元素级（而非矩阵乘法），使用的是.*运算符。若是矩阵的多次方，则使用.^例子： 12p = a.*ap = a.^3 九、杂七杂八 将excel的数据导入matlab中在使用MATLAB对矩阵进行数据处理时，为了方便编辑与修改，常常需要先将数据录入到Excel中，然后再将其导入到MATLAB中参与矩阵运算。最后是matlab教程来源]]></content>
  </entry>
  <entry>
    <title><![CDATA[线性规划]]></title>
    <url>%2F2019%2F08%2F07%2F%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92%2F</url>
    <content type="text"><![CDATA[线性规划问题是在一组线性约束条件限制下，求一线性目标函数的最大值或者最小值的问题。 例子：某机床厂生产甲、乙两种机床,每台销售后的利润分别为 4000 元与 3000 元。生产甲机床需用 A、 B 机器加工,加工时间分别为每台 2 小时和 1 小时;生产乙机床需用 A 、 B 、 C 三种机器加工,加工时间为每台各一小时。若每天可用于加工的机器时数分别为 A 机器 10 小时、 B 机器 8 小时和 C 机器 7 小时,问该厂应生产甲、乙机床各几台,才能使总利润最大?&ensp;这个问题的数学模型为：设该厂生产甲机床x_1,生产乙机床x_2,则x_1,x_2应该满足：(目标函数)max:z = 4x_1 + 3x_2\tag{1}\\s.t.(约束条件) \begin{cases} 2x_1+x_2]]></content>
  </entry>
  <entry>
    <title><![CDATA[整数规划]]></title>
    <url>%2F2019%2F08%2F06%2F%E6%95%B4%E6%95%B0%E8%A7%84%E5%88%92%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[英语单词以及句子（刘一男词汇书）]]></title>
    <url>%2F2019%2F08%2F05%2F%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D%E4%BB%A5%E5%8F%8A%E5%8F%A5%E5%AD%90%2F</url>
    <content type="text"><![CDATA[abrupt a.突然的，出其不意的，唐突的；（行为等）粗鲁无礼的，冒失的词根：“rupt-破”演变自“ripe-成熟”，解释为作物成熟会“破裂”。同例词源“like-喜欢”演变成“luct-词根:喜欢”&ensp;例子reluctant-不情愿的“colo-词根：繁殖”演变成“cult-词根：种植”&ensp;agriculture-农业同义扩展corrupt-a.腐败的，贪污的&ensp;v.收买（cor = com-前缀:全，rupt-词根：坏&ensp;即是腐败）disrupt-v.使混乱；使崩溃；使分裂；使瓦解（dis-否定前缀，rupt-词根：破&ensp;即是使分裂；使瓦解）erupt-v.（尤其指的是火山）爆发（“e”简写自“ex-外”，rupt-词根：破&ensp;即是爆发）interrupt-v.中断，阻碍，打断，打扰（inter-在中间，rupt-词根：破&ensp;即是打断）bankrupt-a.破产的（bank-银行，rupt-词根：破&ensp;破产）同源词根“ripe-成熟”演变出来单词“rip-裂”，比喻的是“裂”的幅度比较小strip-n.窄条，条纹&ensp;v.剥，剥去（str-细长、拉长，rip-裂、裂纹&ensp;即是条纹）ripple-n.波纹&ensp;起波纹（rip-裂纹，p-无意义，le-后缀：多次、反复&ensp;即是波纹）reap-v.收获，收割（“reap-收割”音变自“ripe-成熟”） absolute-a.绝对的，完全的；唯一的词根前缀“ab”除了可以表示“远离”之外，有时也有加强语气的功能。sol = sole-唯一的同根扩展sole-a.单独的，唯一的（“sole-单独的”在1词源上与“self-自己”有关）isolate-v.隔离，孤立（“i-我”，sole-唯一，ate-动词后缀&ensp;即是孤立）desolate-v.使荒芜&ensp;a.荒凉的，荒芜的（“de”谐音“地”，sole-单独：“地方孤独”&ensp;即是荒芜的）insulate-vt.使绝缘，隔离（in-进入，sul=sol-词根：单独，ate-动词后缀&ensp;即是使绝缘）solitary-a.独自的，喜欢独处的（soli=sole-单独的，ary-复合形容词&ensp;即是独自的）solo-n.独奏&ensp;a./ad.独唱的（sole-单独，结尾字母“o”和音乐有关&ensp;即是独唱）solid-n.固体a.固体的（sole-唯一，id-后缀&ensp;即是固体）solidarity-n.团结；一致（solid-固体，ary-后缀：表集合&ensp;即是团结，一致）consolidate-v.使团结；使巩固（con-共同，solid-固体的，ate-动词后缀&ensp;即是使团结）同源词根“isolate-孤立”中的“isol”压缩程“isl”island-n.岛屿（isl-词根：唯一、孤立，and=ant-名词后缀&ensp;即是岛屿）isle-n.小岛（isle是缩略版，表示“小”岛）aisle-n.过道，走廊（a-加强语气，isle-小岛&ensp;过道）peninsula-n.半岛（pen.前缀：半、一半） absorb-vt.吸引，吸收；使全神贯注词根“sorb-吸收”是拟声词根，其发音类似于用嘴吸东西发出的声音同根扩展absorption-n.吸收（absorp=absorp,tion-名词后缀&ensp;即是吸引）同源词根sip-v.小口地喝，抿（采用拟声词造词）dissipate-v.驱散，消散（dis-表否定，sip-吸&ensp;驱散）sob-v./n.哭泣，呜咽（“sob”压缩自“sorb-吸收”&ensp;即是呜咽） abstract-v.提取，抽取，摘录要点，a.抽象的，n.摘要，梗概词根词根“tract-拉扯”与单词“drag-拽”同源，tract末尾字母“t”没意义词源解释关于字母“s”在单音节词前面加强语气而没有实际含义的意义scar-n.疤痕，疤；创伤（s-无意义，car=carve-砍、刻&ensp;刀疤）sneeze-vi.打喷嚏,n.喷嚏（s-无意义，”neeze“演变”nose-鼻子“&ensp;即是打喷嚏）slim-a.苗条的（s-无意义，lim=line-线、线条&ensp;即是苗条的）slender-a.修长的（s-无意义，“lend”音变自“length-长”，er-后缀&ensp;修长的）同源扩展tractor-n.拖拉机（tract-词根：拉扯，or-名词后缀&ensp;即是拖拉机）attract-v.吸引；引起（at-加强语气，tract-词根：拉扯&ensp;即是吸引）attractive-a.吸引人的；漂亮的，迷人的（at-加强语气，tract-词根：拉扯，ive-形容词后缀&ensp;即是吸引人的）contract-n.合同，契约，v.订立合同或者契约；使缩小（con-共同，tract-词根：拉扯&amp;ensp即是拉扯到一块，就是合同）distract-v.分散；使分心；打扰（dis-前缀：分开，tract-词根：拉扯&ensp;即是分心）extract-v.拔出，抽出；摘录n.拔出抽出（ex-往外，tract-词根：拉扯&ensp;即是拔出）subtract-v.减去（sub-向下，tract-词根：拉扯&ensp;即是减去）retreat-v.撤退，退却（re-往回，treat=tract-词根：拉扯&ensp;即是撤退）strap-n.皮带，带子v.扎紧（s-加强语气，tra=tract-词根：拉扯，p-音似“皮带”&ensp;即是皮带）同源词根随着英语词汇的发展和演变，“tract”的元音压缩后成了“trict”,意思不变strict-a.严厉的，严格的，严谨的（s-加强语气，trict-词根：拉扯，拉紧&ensp;即是严谨的）restrict-v.限制，约束（re-往回，s-加强语气，trict-拉扯，拉紧&ensp;即是约束）restrain-n.抑制，制止（“restrain”与“restrict”同源近意，二者可以通用）随着英语词汇的发展和演变，“trict-词根：拉扯”简化成了“trig-词根：拉扯”trigger-n.板机v.触发，引起（trig-词根：拉动，g-无意义，er-后缀&ensp;即是板机）trick-v.引诱，欺骗n.诡计，骗局（trick=tract-拉扯，牵引&ensp;即是引诱，诡计）intrigue-n.阴谋v.密谋，私通（in-内部，trig=trick-诡计，ue-后缀&ensp;即是阴谋，密谋）随着英语词汇的发展和演变，“tract-词根：拉扯”演化为“tretch-词根：拉扯”stretch-v.伸展，延伸n.伸展；一段时间（s-加强语气，tretch=tract-词根：拉扯&ensp;即是伸展）stride-v.大踏步走；跨越n.大步，跨步（“stride”谐音“死拽的”&ensp;即是跨步）随着英语词汇的发展和演变，与“tract-词根：拉扯”有同源关系的单词还有portray-v.描写，描述；画（“por”音变自“before”中的“fore-向前”，“tray”音变自“tract-拉扯”&ensp;即是画）portrait-n.肖像，画像（“portrait”是“portray”的名词形式）trait-n.特征，特点（短词“trait”提取自长词”portrait“,”肖像中有”特征、特点&ensp;即是特征，特点）absurd-a.荒谬的，荒唐可笑的；不合理的词根“surd”采用拟声法造词，引申为“无道理的”surd-a.无道理的；数不尽根的n.无理数]]></content>
  </entry>
  <entry>
    <title><![CDATA[latex基本知识]]></title>
    <url>%2F2019%2F08%2F05%2Flatex%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[一、latex的简洁介绍流行的TeX的版本，比如CTeX和TeXlive,都有自带的编辑器。国内用的比较多的是CTeX,而其自带的编辑器是TeXworks。TeX的排版工具主要有pdfTeX, pdfLaTeX,XeLaTeX等，其中CTex自带的排版工具是pdfLaTeX。关于中文显示的问题，XeTeX原生支持Unicode，很好的解决了中文显示的内容。使用ctex宏包能够一次性的解决所有的中文显示的问题主要的代码为：1234\documentclass[UTF8]&#123;ctexart&#125;\begin&#123;document&#125;你好,world.\end&#123;document&#125; 其中以反斜杠\开头，以空格或者非字符结束的一段文字，就是控制序列，如上面的\documentclass。控制序列并不会直接输出，但是会形象文本的输出效果。代码中{ctexart}代表的是控制序列的必要参数。 二、作者，日期，标题12345678\documentclass[UTF8]&#123;ctexart&#125;\title&#123;anzaikk&#125;\author&#123;anzaikk&#125;\data&#123;\today&#125;\begin&#123;document&#125;maketitle你好，world.\end&#123;document&#125; 代码中紧跟控制序列\documentclass后面的[UTF8]表示的是可选参数，可以增强显示功能。控制序列\maketitle，作用是可以让作者，日期，标题按照预定的效果展示出来。 三、章节和段落在ctexart\article中定义了五大控制序列来调整文章的行文，分别是12345\section&#123;.&#125;\subsection&#123;.&#125;\subsubsection&#123;.&#125;\paragraph&#123;.&#125;\subparagraph&#123;.&#125; 例子12345678910111213141516\documentclass[UTF8]&#123;ctexart&#125;\title&#123;例子&#125;\author&#123;anzaikk&#125;\data&#123;\today&#125;\begin&#123;document&#125;\section&#123;世界&#125;世界是团结有爱的\subsection&#123;中国&#125;中国是团结有爱的\subsubsection&#123;广东&#125;广东是团结友爱的\paragraph&#123;茂名&#125;是团结有爱的\subparagraph&#123;信宜&#125;是团结有爱的\end&#123;document&#125; 四、插入目录在控制序列\maketitle下面或者上面插入控制序列\tableofcontents,再编译两次就能够插入目录 五、数学模式 插入数学公式编写数学公式，使用的是AMS-LaTeX提供的数学模式的功能，首先要在引言区加入amsmath宏包。代码： 1\usepackage&#123;amsmath&#125; 数学模式LaTeX的数学模式有两种，一种是行间模式，一种是行内模式。具体实现是行内模式$—-$,行间模式具体\[—-\],使用equation环境begin{equation}。 上下标 123456789\documentclass[UTF8]&#123;ctexart&#125;\usepackage&#123;amsmath&#125;\begin&#123;document&#125;$E = mc^2$\[E = mc^2\]\begin&#123;eqation&#125;E = mc^2\end&#123;eqation&#125;\end&#123;document&#125; 根式和分式根式\sqrt{—}，分式\frac{-}{-}表示。例子 12345\documentclass[UTF8]&#123;ctexart&#125;\usepackage&#123;amsmath&#125;\begin&#123;document&#125;frac&#123;sqrt&#123;2&#125;&#125;&#123;2&#125;\end&#123;document&#125; 运算符一些小的运算符可以直接在数学模式中输出，但是有一些要借助控制序列，如： 12\[ \pm\; \times \; \div\; \cdot\; \cap\; \cup\;\geq\; \leq\; \neq\; \approx \; \equiv \] 连乘，连加，积分，极限这些大型的运算符用控制序列\prod,\sum,\int,\lim表示，这些都是压缩行高的，我们可以用\limits和\nolimits来强制显式地指定是否压缩这些上下标。多重积分用\int,\iint,\iiint。 矩阵amsmath 的pmatrix, bmatrix, Bmatrix, vmatrix, Vmatrix 等环境可以在矩阵两边加上各种分隔符。例子： 12345\[\begin&#123;pmatrix&#125;a&amp;b\\c&amp;d\end&#123;pmatrix&#125;\]\quad\[\begin&#123;bmatrix&#125;a&amp;b\\c&amp;d\end&#123;bmatrix&#125;\]\quad\[\begin&#123;Bmatrix&#125;a&amp;b\\c&amp;d\end&#123;Bmatrix&#125;\]\quad\[\begin&#123;vmatrix&#125;a&amp;b\\c&amp;d\end&#123;vmatrix&#125;\]\quad\[\begin&#123;Vmatrix&#125;a&amp;b\\c&amp;d\end&#123;Vmatrix&#125;\]\quad 多行公式 不对齐公式组 1234\[\begin&#123;multline&#125;y = 2x +3\\y = 3x +1\end&#123;multline&#125;\] 对齐公式组 12345\[\begin&#123;aligned&#125;y = a + b + c\\y = 3a - 2b +c\\\end&#123;aligned&#125;\] 分段函数分段函数可以用cases次环境来实现，它必须包含在数学环境之内。 1234\[ y=\ begin&#123;cases&#125;-x,\quad x\leq 0 \\x,\quad x&gt;0\end&#123;cases&#125; \] 希腊字符 希腊字符 描述说明 \lambda \\lambda 六、插入表格与图片 插入图片LaTeX中插入图片的方式有很多，其中可以用graphicx宏包提供的\includegraphics控制序列例子： 12345\documentclass[UTF8]&#123;ctexart&#125;\usepackage&#123;graphicx&#125;\begin&#123;document&#125;\includegraphics[width = .8\texwidth]&#123;url&#125;\end&#123;document&#125; 插入表格tabular环境提供了最简单的表格功能。它用\hline命令表示横线，|表示竖线；用&amp;来分列，用\\来换行；每列可以采用居中、居左、居右等横向对齐方式，分别用l、c、r 来表示。 1234567\begin&#123;tabular&#125;&#123;l|c|r&#125;\hlinea&amp;b&amp;c\\\hlinea&amp;b&amp;c\\\hline\end&#123;tabular&#125; 七、页边距设置页边距使用的是宏包geometry。123\usepackage&#123;geometry&#125;\geometry&#123;papersize&#123;20cm,15cm&#125;&#125;\geometry&#123;left = 0.1,right = 0.2, top = 0.3, bottom = 0.5&#125; 八、首行缩进问题为了解决首行缩进问题，我们可以在导言区调用\usepackage{indentfirst}。 九、杂七杂八 分页：\newpage、\pagebreak 字体： \rmfamily,\textrm{}一般使用在正文的罗马字体 \sffamily一般使用在标题中,\texts{} \ttfamily等宽字体一般使用在代码中,\texttt{} 对齐命令：\centering、\raggedleft、\raggedright 空白间距：\hspace{2cm}、\vspace{2ex},第一个是水平间距，第二个是垂直间距。 断行：\linebreak、\\\\ 参考文献：使用的是bibtex工具： 新建.bib文件，然后将引用的内容粘帖进去，并将它与主文件放在同一个文件夹中 主文件夹中内容： 123先在文章的开头写进控制序列\bibliographystyle&#123;&#125; 花括号可以使用plain,alpha,abbrv,amsplain,elsarticle-num\cite&#123;&#125;括号的内容是所复制的内容的开头的括号的内容\bibliography&#123;&#125; 括号填写的内容是.bib的名称 完整的命令行的编译的方法 123456xelatex 名称bibtex 名称xelatex 名称xelatex 名称或者使用latexmk一个指令完成latexmk -xelatex 名称 使用gbt7714宏包gbt7714宏包符合GB\T7714-2015的中国参考文献的推荐标准，有super,numbers,authoryear三个选项。123\usepackage[numbers]&#123;gbt7714&#125;\cite&#123;&#125;\bibliography&#123;&#125; 7.tex说明文档123texdoc 宏包latex学习文档texdoc 本文参考]]></content>
  </entry>
  <entry>
    <title><![CDATA[matlab基本操作知识]]></title>
    <url>%2F2019%2F08%2F05%2Fmatlab%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[变量历史who 显示所使用的所有命令whos 显示所有命令的主要信息，包括内存等。clear 删除存储器中的变量。长任务可以通过使用省略号(…)扩展到另一行。格式命令默认情况下，MATLAB显示的是短格式即是保存四位小数。但是，如果要更精确，则需要使用format命令。format long命令显示十进制后的16位数字。format bank命令将数字舍入到小数点后两位。format short e命令以指数形式显示四位小数加上指数。format long e命令允许以指数形式显示十六位小数加上指数。format rat命令给出计算结果最接近的合理表达式。创建向量行向量使用的是方括号元素集合的形式创建，用空格或者逗号分隔元素。列向量使用的是方括号元素集合的形式创建，用分号分隔元素。创建矩阵矩阵中每一行元素用逗号分隔，列与列之间用分号分隔元素。例：1m = [1 2 3;4 5 6;7 8 9]; matlab命令 数组及向量的命令 命令 描述说明 cat 用于连接数组 find 查找非零元素的索引 size 计算数组的大小 sort 对数组进行排序 dot 计算矩阵点积 创建文件与运行matlab中创建文件有两种形式，一种是通过ide创建，另一种是通过命令提示符。在命令提示符中输入edit加上文件名称即可(.m的后缀名称)运行则在命令提示符后面输入文件名称(不包括后缀名称.m即可)。数据结构matlab的数据类型有： 数据类型 描述说明 int 最后是matlab教程来源]]></content>
  </entry>
  <entry>
    <title><![CDATA[markdown基本知识]]></title>
    <url>%2F2019%2F08%2F04%2Fmarkdown%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[一、标题一级标题二级标题三级标题四级标题五级标题二、引用 一级引用 二级引用 三级引用 三、字体字体的斜体字体字体的加粗字体字体的加粗斜体字体字体的删除线字体 四、分割线—————————— 五、图片 六、超链接百度 七、列表 无序列表 无须列表 无序列表 有序列表 有序列表 有序列表 有序列表 列表分级 列表分级 列表分级 列表分级 列表分级 列表分级 列表分级八、表格 姓名 技能 排行 刘备 哭 大哥 关羽 打 二哥 张飞 骂 三哥 九、代码1234function fun()&#123; echo &quot;这是一句非常牛逼的代码&quot;;&#125;fun(); 十、数学公式借助MathJax引擎,在markdown写作页面的首页插入以下代码1&lt;script type=&quot;text/javascript&quot; src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default&quot;&gt;&lt;/script&gt; 但是这种方式仍然存在有BUG，具体的解决方法点击这里还有一种方法是借助在线的公式编辑器，把编辑器里选好的代码粘帖到文章中就可以了。在线公式编辑器 十一、杂七杂八 换行就是在要换行的末尾加上空格 首行缩进插入半方大空白 &ensp;插入全方大空白 &emsp; 在公式组后面插入编号在公式的末尾插入\tag{…}]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F03%2F21%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
